import yaml
from jinja2 import Environment, FileSystemLoader
import sys

def render_template(template_path, context):
    loader = FileSystemLoader(searchpath="../../jinja_templates/juniper")
    env = Environment(loader=loader)
    template = env.get_template(template_path)
    return template.render(context)

if len(sys.argv) > 1:
    device_name = sys.argv[1]
else:
    device_name = input("enter device name: ")
    
template_path = "base.j2"
yaml_file = f"../../yaml_files/juniper/{device_name}.yaml"

with open(yaml_file, 'r') as stream:
    base_config = yaml.safe_load(stream)

context = {'device': base_config['device']}
config_text = render_template(template_path, context)
#config_text = config_text.strip()

print('----------Displaying configs generated by base config generator------------')
print(config_text)

output_file_path = f'../../startup_configs/juniper/{device_name}.conf'

#clear the content by opening it in write mode
with open(output_file_path, 'w'):
    pass

# with open(output_file_path, 'r') as existing_file:
#     existing_lines = existing_file.readlines()
#     print('this should be empty')
#     print(existing_lines)

# existing_lines = [line.strip() for line in existing_lines]


# # Filter out lines that already exist in the file
# new_lines = [''] + [line.strip() for line in config_text.splitlines() if line.strip() not in existing_lines]

#print('these are the new lines from base config gen')
#print(new_lines)

# Append only the new lines to the file
with open(output_file_path, 'a') as output_file:
    output_file.write('\n')
    output_file.write(config_text)
    output_file.write('\n')

with open(output_file_path, 'r') as output_file:
    device_config1 = output_file.read()

print('full config')
print(device_config1)

